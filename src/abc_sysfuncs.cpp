#include "abc_assembler.hpp"
#include "abc_compiler.hpp"

namespace abc
{

bool sysfunc_is_format(sysfunc_t f)
{
    return f == SYS_DRAW_TEXTF || f == SYS_FORMAT || f == SYS_DEBUG_PRINTF;
}

std::unordered_map<std::string, std::vector<std::string>> const sys_overloads =
{
    { "draw_text", { "draw_text_P" }},
    { "text_width", { "text_width_P" }},
    { "memcpy", { "memcpy_P" }},
    { "strlen", { "strlen_P" }},
    { "strcmp", { "strcmp_P", "strcmp_PP" }},
    { "strcpy", { "strcpy_P" }},
};

std::unordered_map<std::string, sysfunc_t> const sys_names =
{
    { "display",              SYS_DISPLAY              },
    { "display_noclear",      SYS_DISPLAY_NOCLEAR      },
    { "get_pixel",            SYS_GET_PIXEL            },
    { "draw_pixel",           SYS_DRAW_PIXEL           },
    { "draw_hline",           SYS_DRAW_HLINE           },
    { "draw_vline",           SYS_DRAW_VLINE           },
    { "draw_line",            SYS_DRAW_LINE            },
    { "draw_rect",            SYS_DRAW_RECT            },
    { "draw_filled_rect",     SYS_DRAW_FILLED_RECT     },
    { "draw_circle",          SYS_DRAW_CIRCLE          },
    { "draw_filled_circle",   SYS_DRAW_FILLED_CIRCLE   },
    { "draw_sprite",          SYS_DRAW_SPRITE          },
    { "draw_sprite_selfmask", SYS_DRAW_SPRITE_SELFMASK },
    { "draw_tilemap",         SYS_DRAW_TILEMAP         },
    { "draw_text",            SYS_DRAW_TEXT            },
    { "draw_text_P",          SYS_DRAW_TEXT_P          },
    { "draw_textf",           SYS_DRAW_TEXTF           },
    { "text_width",           SYS_TEXT_WIDTH           },
    { "text_width_P",         SYS_TEXT_WIDTH_P         },
    { "wrap_text",            SYS_WRAP_TEXT            },
    { "set_text_font",        SYS_SET_TEXT_FONT        },
    { "set_text_color",       SYS_SET_TEXT_COLOR       },
    { "sprites_width",        SYS_SPRITES_WIDTH        },
    { "sprites_height",       SYS_SPRITES_HEIGHT       },
    { "sprites_frames",       SYS_SPRITES_FRAMES       },
    { "tilemap_width",        SYS_TILEMAP_WIDTH        },
    { "tilemap_height",       SYS_TILEMAP_HEIGHT       },
    { "tilemap_get",          SYS_TILEMAP_GET          },
    { "set_frame_rate",       SYS_SET_FRAME_RATE       },
    { "idle",                 SYS_IDLE                 },
    { "debug_break",          SYS_DEBUG_BREAK          },
    { "debug_printf",         SYS_DEBUG_PRINTF         },
    { "assert",               SYS_ASSERT               },
    { "buttons",              SYS_BUTTONS              },
    { "just_pressed",         SYS_JUST_PRESSED         },
    { "just_released",        SYS_JUST_RELEASED        },
    { "pressed",              SYS_PRESSED              },
    { "any_pressed",          SYS_ANY_PRESSED          },
    { "not_pressed",          SYS_NOT_PRESSED          },
    { "millis",               SYS_MILLIS               },
    { "memset",               SYS_MEMSET               },
    { "memcpy",               SYS_MEMCPY               },
    { "memcpy_P",             SYS_MEMCPY_P             },
    { "strlen",               SYS_STRLEN               },
    { "strlen_P",             SYS_STRLEN_P             },
    { "strcmp",               SYS_STRCMP               },
    { "strcmp_P",             SYS_STRCMP_P             },
    { "strcmp_PP",            SYS_STRCMP_PP            },
    { "strcpy",               SYS_STRCPY               },
    { "strcpy_P",             SYS_STRCPY_P             },
    { "format",               SYS_FORMAT               },
    { "music_play",           SYS_MUSIC_PLAY           },
    { "music_playing",        SYS_MUSIC_PLAYING        },
    { "music_stop",           SYS_MUSIC_STOP           },
    { "tones_play",           SYS_TONES_PLAY           },
    { "tones_play_primary",   SYS_TONES_PLAY_PRIMARY   },
    { "tones_play_auto",      SYS_TONES_PLAY_AUTO      },
    { "tones_playing",        SYS_TONES_PLAYING        },
    { "tones_stop",           SYS_TONES_STOP           },
    { "audio_enabled",        SYS_AUDIO_ENABLED        },
    { "audio_toggle",         SYS_AUDIO_TOGGLE         },
    { "audio_playing",        SYS_AUDIO_PLAYING        },
    { "audio_stop",           SYS_AUDIO_STOP           },
    { "save_exists",          SYS_SAVE_EXISTS          },
    { "save",                 SYS_SAVE                 },
    { "load",                 SYS_LOAD                 },
    { "sin",                  SYS_SIN                  },
    { "cos",                  SYS_COS                  },
    { "tan",                  SYS_TAN                  },
    { "atan2",                SYS_ATAN2                },
    { "floor",                SYS_FLOOR                },
    { "ceil",                 SYS_CEIL                 },
    { "round",                SYS_ROUND                },
    { "mod",                  SYS_MOD                  },
    { "pow",                  SYS_POW                  },
    { "sqrt",                 SYS_SQRT                 },
    { "generate_random_seed", SYS_GENERATE_RANDOM_SEED },
    { "init_random_seed",     SYS_INIT_RANDOM_SEED     },
    { "set_random_seed",      SYS_SET_RANDOM_SEED      },
    { "random",               SYS_RANDOM               },
    { "random_range",         SYS_RANDOM_RANGE         },
};

static std::string const CAT_GRAPHICS = "Graphics";
static std::string const CAT_SOUND = "Sound";
static std::string const CAT_BUTTONS = "Buttons";
static std::string const CAT_MATH = "Math";
static std::string const CAT_STRINGS = "Strings";
static std::string const CAT_UTILITY = "Utility";
static std::string const CAT_RANDOM = "Random";
static std::string const CAT_SAVELOAD = "Save/Load";

std::unordered_map<sysfunc_t, sysfunc_info_t> const sysfunc_decls
{
    { SYS_DISPLAY,              { { TYPE_VOID,  { }, { } }, CAT_GRAPHICS, "" } },
    { SYS_DISPLAY_NOCLEAR,      { { TYPE_VOID,  { }, { } }, CAT_GRAPHICS, "" } },
    { SYS_GET_PIXEL,            { { TYPE_U8,    { TYPE_U8, TYPE_U8 }, { "x", "y" } }, CAT_GRAPHICS, "" } },
    { SYS_DRAW_PIXEL,           { { TYPE_VOID,  { TYPE_I16, TYPE_I16, TYPE_U8 }, { "x", "y", "color" } }, CAT_GRAPHICS, "" } },
    { SYS_DRAW_HLINE,           { { TYPE_VOID,  { TYPE_I16, TYPE_I16, TYPE_U8, TYPE_U8 }, { "x", "y", "w", "color" } }, CAT_GRAPHICS, "" } },
    { SYS_DRAW_VLINE,           { { TYPE_VOID,  { TYPE_I16, TYPE_I16, TYPE_U8, TYPE_U8 }, { "x", "y", "h", "color" } }, CAT_GRAPHICS, "" } },
    { SYS_DRAW_LINE,            { { TYPE_VOID,  { TYPE_I16, TYPE_I16, TYPE_I16, TYPE_I16, TYPE_U8 }, { "x0", "y0", "x1", "y1", "color" } }, CAT_GRAPHICS, "" } },
    { SYS_DRAW_RECT,            { { TYPE_VOID,  { TYPE_I16, TYPE_I16, TYPE_U8, TYPE_U8, TYPE_U8 }, { "x", "y", "w", "h", "color" } }, CAT_GRAPHICS, "" } },
    { SYS_DRAW_FILLED_RECT,     { { TYPE_VOID,  { TYPE_I16, TYPE_I16, TYPE_U8, TYPE_U8, TYPE_U8 }, { "x", "y", "w", "h", "color" } }, CAT_GRAPHICS, "" } },
    { SYS_DRAW_CIRCLE,          { { TYPE_VOID,  { TYPE_I16, TYPE_I16, TYPE_U8, TYPE_U8 }, { "x", "y", "r", "color" } }, CAT_GRAPHICS, "" } },
    { SYS_DRAW_FILLED_CIRCLE,   { { TYPE_VOID,  { TYPE_I16, TYPE_I16, TYPE_U8, TYPE_U8 }, { "x", "y", "r", "color" } }, CAT_GRAPHICS, "" } },
    { SYS_DRAW_SPRITE,          { { TYPE_VOID,  { TYPE_I16, TYPE_I16, TYPE_SPRITES, TYPE_U16 }, { "x", "y", "s", "frame" } }, CAT_GRAPHICS, "" } },
    { SYS_DRAW_SPRITE_SELFMASK, { { TYPE_VOID,  { TYPE_I16, TYPE_I16, TYPE_SPRITES, TYPE_U16 }, { "x", "y", "s", "frame" } }, CAT_GRAPHICS, "" } },
    { SYS_DRAW_TILEMAP,         { { TYPE_VOID,  { TYPE_I16, TYPE_I16, TYPE_SPRITES, TYPE_TILEMAP }, { "x", "y", "s", "tm" } }, CAT_GRAPHICS, "" } },
    { SYS_DRAW_TEXT,            { { TYPE_VOID,  { TYPE_I16, TYPE_I16, TYPE_STR }, { "x", "y", "str" } }, CAT_GRAPHICS, "" } },
    { SYS_DRAW_TEXT_P,          { { TYPE_VOID,  { TYPE_I16, TYPE_I16, TYPE_STR_PROG }, { "x", "y", "str" } }, CAT_GRAPHICS, "" } },
    { SYS_DRAW_TEXTF,           { { TYPE_VOID,  { TYPE_I16, TYPE_I16, TYPE_STR_PROG }, { "x", "y", "fmt" } }, CAT_GRAPHICS, "" } },
    { SYS_TEXT_WIDTH,           { { TYPE_U16,   { TYPE_STR }, { "str" } }, CAT_GRAPHICS, "" } },
    { SYS_TEXT_WIDTH_P,         { { TYPE_U16,   { TYPE_STR_PROG }, { "str" } }, CAT_GRAPHICS, "" } },
    { SYS_WRAP_TEXT,            { { TYPE_VOID,  { TYPE_STR, TYPE_U8 }, { "str", "w"} }, CAT_GRAPHICS, "" } },
    { SYS_SET_TEXT_FONT,        { { TYPE_VOID,  { TYPE_FONT }, { "f" } }, CAT_GRAPHICS, "" } },
    { SYS_SET_TEXT_COLOR,       { { TYPE_VOID,  { TYPE_U8 }, { "color" } }, CAT_GRAPHICS, "" } },
    { SYS_SPRITES_WIDTH,        { { TYPE_U8,    { TYPE_SPRITES }, { "s" } }, CAT_GRAPHICS, "" } },
    { SYS_SPRITES_HEIGHT,       { { TYPE_U8,    { TYPE_SPRITES }, { "s" } }, CAT_GRAPHICS, "" } },
    { SYS_SPRITES_FRAMES,       { { TYPE_U16,   { TYPE_SPRITES }, { "s" } }, CAT_GRAPHICS, "" } },
    { SYS_TILEMAP_WIDTH,        { { TYPE_U16,   { TYPE_TILEMAP }, { "tm" } }, CAT_GRAPHICS, "" } },
    { SYS_TILEMAP_HEIGHT,       { { TYPE_U16,   { TYPE_TILEMAP }, { "tm" } }, CAT_GRAPHICS, "" } },
    { SYS_TILEMAP_GET,          { { TYPE_U16,   { TYPE_TILEMAP, TYPE_U16, TYPE_U16 }, { "tm", "x", "y" }}, CAT_GRAPHICS, ""}},
    { SYS_SET_FRAME_RATE,       { { TYPE_VOID,  { TYPE_U8 }, { "fps" } }, CAT_GRAPHICS, "" } },
    { SYS_IDLE,                 { { TYPE_VOID,  { }, { } }, CAT_UTILITY, "" } },
    { SYS_DEBUG_BREAK,          { { TYPE_VOID,  { }, { } }, CAT_UTILITY, "" } },
    { SYS_DEBUG_PRINTF,         { { TYPE_VOID,  { TYPE_STR_PROG }, { "fmt" } }, CAT_UTILITY, "" } },
    { SYS_ASSERT,               { { TYPE_VOID,  { TYPE_BOOL }, { "cond" } }, CAT_UTILITY, "" } },
    { SYS_BUTTONS,              { { TYPE_U8,    { }, { } }, CAT_BUTTONS, "" } },
    { SYS_JUST_PRESSED,         { { TYPE_BOOL,  { TYPE_U8 }, { "button" } }, CAT_BUTTONS, "" } },
    { SYS_JUST_RELEASED,        { { TYPE_BOOL,  { TYPE_U8 }, { "button" } }, CAT_BUTTONS, "" } },
    { SYS_PRESSED,              { { TYPE_BOOL,  { TYPE_U8 }, { "buttons" } }, CAT_BUTTONS, "" } },
    { SYS_ANY_PRESSED,          { { TYPE_BOOL,  { TYPE_U8 }, { "buttons" } }, CAT_BUTTONS, "" } },
    { SYS_NOT_PRESSED,          { { TYPE_BOOL,  { TYPE_U8 }, { "buttons" } }, CAT_BUTTONS, "" } },
    { SYS_MILLIS,               { { TYPE_U32,   { }, { } }, CAT_UTILITY, "" } },
    { SYS_MEMSET,               { { TYPE_VOID,  { TYPE_BYTE_AREF, TYPE_U8 }, { "dst", "val" } }, CAT_UTILITY, "" } },
    { SYS_MEMCPY,               { { TYPE_VOID,  { TYPE_BYTE_AREF, TYPE_BYTE_AREF }, { "dst", "src" } }, CAT_UTILITY, "" } },
    { SYS_MEMCPY_P,             { { TYPE_VOID,  { TYPE_BYTE_AREF, TYPE_BYTE_PROG_AREF }, { "dst", "src" } }, CAT_UTILITY, "" } },
    { SYS_STRLEN,               { { TYPE_U16,   { TYPE_STR }, { "str" } }, CAT_STRINGS, "" } },
    { SYS_STRLEN_P,             { { TYPE_U24,   { TYPE_STR_PROG }, { "str" } }, CAT_STRINGS, "" } },
    { SYS_STRCMP,               { { TYPE_I8,    { TYPE_STR, TYPE_STR }, { "str0", "str1" } }, CAT_STRINGS, "" } },
    { SYS_STRCMP_P,             { { TYPE_I8,    { TYPE_STR, TYPE_STR_PROG }, { "str0", "str1" } }, CAT_STRINGS, "" } },
    { SYS_STRCMP_PP,            { { TYPE_I8,    { TYPE_STR_PROG, TYPE_STR_PROG }, { "str0", "str1" } }, CAT_STRINGS, "" } },
    { SYS_STRCPY,               { { TYPE_STR,   { TYPE_STR, TYPE_STR }, { "dst", "src" } }, CAT_STRINGS, "" } },
    { SYS_STRCPY_P,             { { TYPE_STR,   { TYPE_STR, TYPE_STR_PROG }, { "dst", "src" } }, CAT_STRINGS, "" } },
    { SYS_FORMAT,               { { TYPE_VOID,  { TYPE_STR, TYPE_STR_PROG }, { "dst", "fmt" } }, CAT_STRINGS, "" } },
    { SYS_MUSIC_PLAY,           { { TYPE_VOID,  { TYPE_MUSIC }, { "song" } }, CAT_SOUND, "" } },
    { SYS_MUSIC_PLAYING,        { { TYPE_BOOL,  { }, { } }, CAT_SOUND, "" } },
    { SYS_MUSIC_STOP,           { { TYPE_VOID,  { }, { } }, CAT_SOUND, "" } },
    { SYS_TONES_PLAY,           { { TYPE_VOID,  { TYPE_TONES }, { "sfx" } }, CAT_SOUND, "" } },
    { SYS_TONES_PLAY_PRIMARY,   { { TYPE_VOID,  { TYPE_TONES }, { "sfx" } }, CAT_SOUND, "" } },
    { SYS_TONES_PLAY_AUTO,      { { TYPE_VOID,  { TYPE_TONES }, { "sfx" } }, CAT_SOUND, "" } },
    { SYS_TONES_PLAYING,        { { TYPE_BOOL,  { }, { } }, CAT_SOUND, "" } },
    { SYS_TONES_STOP,           { { TYPE_VOID,  { }, { } }, CAT_SOUND, "" } },
    { SYS_AUDIO_ENABLED,        { { TYPE_BOOL,  { }, { } }, CAT_SOUND, "" } },
    { SYS_AUDIO_TOGGLE,         { { TYPE_VOID,  { }, { } }, CAT_SOUND, "" } },
    { SYS_AUDIO_PLAYING,        { { TYPE_BOOL,  { }, { } }, CAT_SOUND, "" } },
    { SYS_AUDIO_STOP,           { { TYPE_VOID,  { }, { } }, CAT_SOUND, "" } },
    { SYS_SAVE_EXISTS,          { { TYPE_BOOL,  { }, { } }, CAT_SAVELOAD, "" } },
    { SYS_SAVE,                 { { TYPE_VOID,  { }, { } }, CAT_SAVELOAD, "" } },
    { SYS_LOAD,                 { { TYPE_BOOL,  { }, { } }, CAT_SAVELOAD, "" } },
    { SYS_SIN,                  { { TYPE_FLOAT, { TYPE_FLOAT }, { "angle" } }, CAT_MATH, "" } },
    { SYS_COS,                  { { TYPE_FLOAT, { TYPE_FLOAT }, { "angle" } }, CAT_MATH, "" } },
    { SYS_TAN,                  { { TYPE_FLOAT, { TYPE_FLOAT }, { "angle" } }, CAT_MATH, "" } },
    { SYS_ATAN2,                { { TYPE_FLOAT, { TYPE_FLOAT, TYPE_FLOAT }, { "y", "x" } }, CAT_MATH, "" } },
    { SYS_FLOOR,                { { TYPE_FLOAT, { TYPE_FLOAT }, { "x" } }, CAT_MATH, "" } },
    { SYS_CEIL,                 { { TYPE_FLOAT, { TYPE_FLOAT }, { "x" } }, CAT_MATH, "" } },
    { SYS_ROUND,                { { TYPE_FLOAT, { TYPE_FLOAT }, { "x" } }, CAT_MATH, "" } },
    { SYS_MOD,                  { { TYPE_FLOAT, { TYPE_FLOAT, TYPE_FLOAT }, { "x", "y" } }, CAT_MATH, "" } },
    { SYS_POW,                  { { TYPE_FLOAT, { TYPE_FLOAT, TYPE_FLOAT }, { "x", "y" } }, CAT_MATH, "" } },
    { SYS_SQRT,                 { { TYPE_FLOAT, { TYPE_FLOAT }, { "x" } }, CAT_MATH, "" } },
    { SYS_GENERATE_RANDOM_SEED, { { TYPE_U32,   { }, { } }, CAT_RANDOM, "" } },
    { SYS_INIT_RANDOM_SEED,     { { TYPE_VOID,  { }, { } }, CAT_RANDOM, "" } },
    { SYS_SET_RANDOM_SEED,      { { TYPE_VOID,  { TYPE_U32 }, { "seed" } }, CAT_RANDOM, ""}},
    { SYS_RANDOM,               { { TYPE_U32,   { }, { } }, CAT_RANDOM, "" } },
    { SYS_RANDOM_RANGE,         { { TYPE_U32,   { TYPE_U32, TYPE_U32 }, { "lo", "hi" } }, CAT_RANDOM, "" } },
};

}
