struct foo_t
{
    char[10] str;
};

void main()
{
    $debug_break();
    
    {
        u8[10] a;
        for(u8 i = 0; i < len(a); ++i)
            a[i] = i;
        
        {
            u8[]& slice = a[1:4];
            $assert(a[2] == 2);
            $assert(slice[1] == 2);
            $assert(len(slice) == 3);
        }
        
        {
            u8 i = 1;
            u8 j = 4;
            u8[]& slice = a[i:j];
            $assert(a[2] == 2);
            $assert(slice[1] == 2);
            $assert(len(slice) == 3);
        }
        
        {
            u8[3]& slice = a[1:4];
            $assert(a[2] == 2);
            $assert(slice[1] == 2);
            $assert(len(slice) == 3);
        }
        
        {
            u8[3] slice = a[1:4];
            $assert(a[2] == 2);
            $assert(slice[1] == 2);
            $assert(len(slice) == 3);
        }
    }
    
    {
        char[10] str = "Hello";
        char[10] str2 = "Hell";
        $assert(str[0:4] == str2);
    }
    
    {
        char[10] str = "Hello";
        $assert(str[1:4] == "ell");
        $assert(str == "Hello");
        str[1:4] = "opp";
        $assert(str == "Hoppo");
    }
    
    {
        char[10] str = "Hello";
        char[]& r = str;
        $assert(r[1:4] == "ell");
        $assert(str == "Hello");
        $assert(r == "Hello");
        r[1:4] = "opp";
        $assert(r == "Hoppo");
        $assert(str == "Hoppo");
    }
    
    $assert("Hello"[1:4] == "ell");
    
    {
        char[5] str = "Hello";
        $assert(str == "Hello");
        $memcpy(str[1:4], "opp");
        $assert(str == "Hoppo");
    }
    
    {
        char[5] str = "Hello";
        char[5] str2 = "Boppy";
        $assert(str == "Hello");
        $memcpy(str[1:4], str2[1:4]);
        $assert(str == "Hoppo");
    }
    
    {
        foo_t f = { "Hello" };
        $assert(f.str == "Hello");
        $memcpy(f.str[1:4], "opp");
        $assert(f.str == "Hoppo");
    }
    
    {
        char[5] str = "Hello";
        $assert(str == "Hello");
        $memset(str[1:4], 'o');
        $assert(str == "Hoooo");
        $memset(str[1+:3], 'y');
        $assert(str == "Hyyyo");
        u8 n = 3;
        $memset(str[1+:n], 'z');
        $assert(str == "Hzzzo");
    }
    
    $debug_break();
}
